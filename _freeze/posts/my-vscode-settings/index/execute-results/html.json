{
  "hash": "4e589133c5cc50adab75a3ec1fdf57e7",
  "result": {
    "markdown": "---\ntitle: \"My VS code settings\"\nauthor: \"Sam Vaughan\"\ndate: \"2023-05-05\"\ncategories: [code]\nhighlight-style: github\n---\n\nI've been playing around with my VS code settings to make its integration with the IPython terminal a little better. I've never really liked Jupyter notebooks, so all of my coding involves me editing in a python script and sending code to an IPython terminal, or sometimes working in a [Quarto](https://quarto.org/) notebook.\n\nWhilst working with `R` in VSCode, I've really liked being able to send individual lines to the `radian` [R console](https://github.com/randy3k/radian) using `cmd+enter` and running the entire script using `cmd+shift+s`. It was actually a bit tricky to get the same behavious in VSCode with IPython: I'm documenting it here for posterity!\n\nThe following comes from a comment on [this](https://stackoverflow.com/questions/53951648/in-vs-code-can-one-run-python-code-in-an-integrated-python-terminal-like-in-spy) very helpful stackoverflow question and [this](https://gist.github.com/Diogo-Rossi/66cd423f8d849ce2eeed3c1f8f123502) Github gist. Using [this](https://marketplace.visualstudio.com/items?itemName=ctf0.macros) Macro extension for VScode, I added the following to my `settings.json`:\n\n\n```{javascript}\n    \"macros.list\": {\n        \"runInIPythonTerminal\": [\n            {\"command\": \"workbench.action.terminal.sendSequence\",\"args\": { \"text\": \"%run \\\"${file}\\\"\"}},\n            {\"command\": \"$delay\",\"args\": {\"delay\": 100}},\n            {\"command\": \"workbench.action.terminal.sendSequence\",\"args\": { \"text\": \"\\r\" }},\n            ],\n    },\n```\n\n\nwhich makes a new macro to send `%run {current_python_filename}` to the terminal. I then map this to a new keybinding:\n\n\n```{javascript}\n\n  {\n    \"key\": \"shift+cmd+s\",\n    \"command\": \"macros.runInIPythonTerminal\",\n    \"when\": \"editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'\"\n  }\n```\n\n\nwhere the \"when\" section tells VSCode to only run this command under certain circumstances (i.e. when I'm in the text editor and working on a python file). I've also added this to run a single line:\n\n```javascript\n\n  {\n    \"key\": \"cmd+enter\",\n    \"command\": \"python.execSelectionInTerminal\",\n    \"when\": \"editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'\"\n  },\n```\n\nand unmapped the default `shift+enter`. \n\nNote that this isn't perfect- it doesn't work for sending multiple lines to IPython at once. For example, pressing `cmd+enter` on first of the following lines \n\n```python\n# | eval : false\n\n# fmt: off\ndata = dict(\n    a=1, \n    b=2, \n    c=3\n    )\n```\n\n_should_ be smart enough to send the entire snippet to IPython- it works very nicely in `R` with the`radian` shell- but instead it will only send `data = dict(` and leave you hanging. You'll need to highlight the entire three lines, and _then_ press `cmd+enter` for it to work. \n\nIt looks like there is a [feature request](https://github.com/microsoft/vscode-python/issues/18105) for something to do this open on Github, so perhaps it might be in the works at some point. \n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}